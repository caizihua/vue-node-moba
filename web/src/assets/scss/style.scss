//所有被包含的文件需要以下划线为开头，引用时取消下划线。
@import "./variables";
//reset
* {
  //通过从已设定的宽度和高度分别减去边框和内边距才能得到内容的宽度和高度。
  //加padding不撑大本身而是挤压内容。
  box-sizing: border-box;
  outline: none;
}
html {
  font-size: 13px;
}
body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2em;
  background: #f1f1f1;
  -webkit-font-smoothing: antialiased;
}
a {
  color: #999;
}

//colors
@each $colorKey, $color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }
  .bg-#{$colorKey} {
    background-color: $color;
  }
}
//text align
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important;
  }
}
//font size

//字体尺寸
@each $sizeKey, $size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size;
  }
}

//flex
.d-flex {
  display: flex;
}
.flex-colum {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}

//justify-content
@each $key, $value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
  .ai-#{$key} {
    align-items: $value;
  }
}
//align-items
@each $key, $value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
}

.flex-1 {
  flex: 1;
}
.flex-grow-1 {
  flex-grow: 1;
}

//margin padding

@each $typeKey, $type in $spacing-types {
  @each $sizeKey, $size in $spacing-sizes {
    //m-1 形式
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size;
    }
    //mx-1
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $spacing-base-size;
      #{$type}-right: $size * $spacing-base-size;
    }
    //my-1
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $spacing-base-size;
      #{$type}-bottom: $size * $spacing-base-size;
    }
    @each $directionKey, $direction in $spacing-direction {
      //mt-1,pt-1形式
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size;
      }
    }
  }
}

//button
.btn {
  border: none;
  justify-content: center;
  border-radius: 0.1538rem;
  //取之前定义的工具类中的样式
  font-size: map-get($font-sizes, "sm") * $base-font-size;
  padding: 0.2rem 0.6rem;
  &.btn-lg {
    display: flex;
    align-items: center;
    background: map-get($colors, "light-2");
    border: 1px solid #fcfcfc;
    border-radius: 0.4rem;
    padding: 0.5rem 0;
    font-style: 1rem;
    i {
      color: map-get($colors, "primary");
      font-weight: bold;
      font-size: 1.5rem;
      margin-right: 0.5rem;
    }
  }
}

//nav
.nav {
  display: flex;
  //&表示是同级的关系
  .nav-item {
    border-bottom: 3px solid transparent;
    padding-bottom: 0.2rem;
    &.active {
      color: map-get($colors, "primary");
      border-bottom-color: map-get($colors, "primary");
    }
  }
  &.nav-inverse {
    .nav-item {
      color: map-get($colors, "white");
      &.active {
        border-bottom-color: map-get($colors, "white");
      }
    }
  }
}

//width
.w-100 {
  width: 100%;
}
.h-100 {
  height: 100%;
}

//sprite
.sprite {
  background: url("../images/index.png") no-repeat 0 0;
  background-size: 28.6154rem;
  display: inline-block;
}

@each $n, $w, $h, $p in $icons {
  .sprite-#{$n} {
    width: $w;
    height: $h;
    background-position: $p;
  }
}

//text
.text-ellipsis {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

p {
  line-height: 1.5em;
}

//borders
@each $dir in (top, right, bottom, left) {
  .border-#{$dir} {
    border-#{$dir}: 1px solid $border-color;
  }
}
